name: "Release"

# @see https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#onpushpull_requestbranchestags
on:
  push:
    branches:
      - 'ubuntu20-cache-cross-arm'

jobs:
  env-prod:
    runs-on: ubuntu-20.04
    steps:
      ################################################################
      # Git checkout
      - name: Checkout repository
        uses: actions/checkout@v3
      ################################################################
      # Build
      # The github.ref is, for example, refs/tags/dev @see https://docs.github.com/en/actions/learn-github-actions/contexts#github-context
      # Generate variables like:
      #   SRS_TAG=dev
      # @see https://docs.github.com/en/actions/reference/workflow-commands-for-github-actions#setting-an-environment-variable
      - name: Generate varaiables
        id: srs-vars
        run: |
          SRS_TAG=$(echo ${{ github.ref }}| awk -F '/' '{print $3}')
          echo "SRS_TAG=$SRS_TAG" >> $GITHUB_ENV
          echo "::set-output name=SRS_TAG::${SRS_TAG}"
    outputs:
      SRS_TAG: ${{ steps.srs-vars.outputs.SRS_TAG }}

  docker-prod:
    runs-on: ubuntu-20.04
    needs:
      - env-prod
    steps:
      ################################################################
      - name: Covert output to env
        run: |
          SRS_TAG=${{ needs.env-prod.outputs.SRS_TAG }}
          echo "SRS_TAG=$SRS_TAG" >> $GITHUB_ENV
      ################################################################
      # Git checkout
      - name: Checkout repository
        uses: actions/checkout@v3
      # See https://github.com/crazy-max/ghaction-docker-buildx#moved-to-docker-organization
      # https://github.com/docker/setup-qemu-action
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      ################################################################
      # Docker
      - name: Login docker hub
        uses: docker/login-action@v2
        with:
          username: "${{ secrets.DOCKER_USERNAME }}"
          password: "${{ secrets.DOCKER_PASSWORD }}"
      - name: Build docker image
        run: |
          docker build --tag ossrs/srs:$SRS_TAG .
      - name: Push to docker hub
        run: |
          docker push ossrs/srs:$SRS_TAG
    outputs:
      SRS_DOCKER_PROD_DONE: ok

  aliyun-prod:
    runs-on: ubuntu-20.04
    needs:
      - env-prod
      - docker-prod
    steps:
      ################################################################
      - name: Covert output to env
        run: |
          SRS_TAG=${{ needs.env-prod.outputs.SRS_TAG }}
          echo "SRS_TAG=$SRS_TAG" >> $GITHUB_ENV
      ################################################################
      # Aliyun ACR
      - name: Login aliyun hub
        uses: docker/login-action@v2
        with:
          registry: registry.cn-hangzhou.aliyuncs.com
          username: "${{ secrets.ACR_USERNAME }}"
          password: "${{ secrets.ACR_PASSWORD }}"
      - name: Copy to Aliyun registry
        uses: akhilerm/tag-push-action@v2.1.0
        with:
          src: ossrs/srs:${{ env.SRS_TAG }}
          dst: |
            registry.cn-hangzhou.aliyuncs.com/ossrs/srs:${{ env.SRS_TAG }}
    outputs:
      SRS_ALIYUN_PROD_DONE: ok

  done:
    name: done
    runs-on: ubuntu-20.04
    needs:
      - docker-prod
      - aliyun-prod
    steps:
      - run: echo 'All done'

